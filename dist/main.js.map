{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"express\"","webpack:///./src/app/app-router.ts","webpack:///./src/app/modules/entry/index.ts","webpack:///./src/app/modules/entry/process/delete-entry.process.ts","webpack:///../../../libs/components-deprecated/src/error-handler/index.ts","webpack:///../../../libs/components-deprecated/src/error-handler/error-issue-handler.class.ts","webpack:///../../../libs/components-deprecated/src/error-handler/validator/date-validator.class.ts","webpack:///../../../libs/components-deprecated/src/error-handler/error-issue-type.enum.ts","webpack:///../../../libs/components-deprecated/src/error-handler/validator/string-validator.class.ts","webpack:///../../../libs/components-deprecated/src/error-handler/error-handler.class.ts","webpack:///../../../libs/components-deprecated/src/error-handler/error-object.class.ts","webpack:///../../../libs/components-deprecated/src/error-handler/error-issue.type.ts","webpack:///./src/app/modules/entry/process/get-entry-by-id.process.ts","webpack:///./src/app/modules/entry/process/list-entry.process.ts","webpack:///./src/app/modules/entry/process/save-entry.process.ts","webpack:///../entites/src/index.ts","webpack:///../entites/src/lib/entry/index.ts","webpack:///../entites/src/lib/entry/entry.class.ts","webpack:///../entites/src/lib/entry/entry.interface.ts","webpack:///../entites/src/lib/notebook/index.ts","webpack:///../entites/src/lib/notebook/notebook.class.ts","webpack:///../entites/src/lib/notebook/notebook.interface.ts","webpack:///../entites/src/lib/user/index.ts","webpack:///../entites/src/lib/user/user.class.ts","webpack:///../entites/src/lib/user/user.interface.ts","webpack:///./src/app/modules/entry/process/update-entry.process.ts","webpack:///./src/app/modules/entry/services/entry-data-access.class.ts","webpack:///../../../libs/node-components/src/index.ts","webpack:///../../../libs/node-components/src/lib/mongoose-data-access/mongoose-data-access.ts","webpack:///external commonjs \"mongoose\"","webpack:///external commonjs \"mongodb\"","webpack:///./src/app/modules/entry/services/entry-data-access.interface.ts","webpack:///./src/app/modules/entry/entry.router.ts","webpack:///./src/app/modules/entry/controllers/delete-entry.controller.ts","webpack:///../../../libs/components-deprecated/src/express/index.ts","webpack:///../../../libs/components-deprecated/src/express/api-response.class.ts","webpack:///../../../libs/components-deprecated/src/app-error/http-error.class.ts","webpack:///../../../libs/components-deprecated/src/app-error/app-error.class.ts","webpack:///../../../libs/components-deprecated/src/issue-handler/issue-handler.class.ts","webpack:///../../../libs/components-deprecated/src/issue-handler/issue-type.enum.ts","webpack:///../../../libs/components-deprecated/src/express/body-request.type.ts","webpack:///../../../libs/components-deprecated/src/express/response-handler.class.ts","webpack:///../../../libs/components-deprecated/src/express/request-hanlder.function.ts","webpack:///../../../libs/components-deprecated/src/express/hanlder-error.function.ts","webpack:///../../../libs/components-deprecated/src/express/request-with-session.interface.ts","webpack:///./src/app/modules/entry/controllers/get-entry-by-id.controller.ts","webpack:///./src/app/db-connections/journal-db-connection.ts","webpack:///../../../libs/components-deprecated/src/data-access/index.ts","webpack:///../../../libs/components-deprecated/src/data-access/mongoose-data-access.ts","webpack:///../../../libs/components-deprecated/src/data-access/mongoose-data-schema.ts","webpack:///../../../libs/components-deprecated/src/data-access/mongoose-data-schema.interface.ts","webpack:///../../../libs/components-deprecated/src/data-access/data-access.interface.ts","webpack:///../../../libs/components-deprecated/src/data-access/mongo/mongo-data-access.interface.ts","webpack:///../../../libs/components-deprecated/src/data-access/mongo/mongo-data-access.class.ts","webpack:///../data-models/src/index.ts","webpack:///../data-models/src/lib/mongoose/entry.mongoose-data-model.ts","webpack:///../data-models/src/lib/mongoose/notebook.mongoose-data-model.ts","webpack:///../data-models/src/lib/mongoose/user.mongoose-data-model.ts","webpack:///./src/app/app-env.ts","webpack:///./src/app/modules/entry/controllers/list-entry.controller.ts","webpack:///./src/app/modules/entry/controllers/save-entry.controller.ts","webpack:///./src/app/modules/entry/controllers/update-entry.controller.ts","webpack:///./src/app/middlewares/verify-session.middle.ts","webpack:///./src/app/components/session.class.ts","webpack:///external commonjs \"jsonwebtoken\"","webpack:///./src/app/modules/notebook/index.ts","webpack:///./src/app/modules/notebook/process/delete-notebook.process.ts","webpack:///./src/app/modules/notebook/process/get-notebook-by-id.process.ts","webpack:///./src/app/modules/notebook/process/list-notebook.process.ts","webpack:///./src/app/modules/notebook/process/save-notebook.process.ts","webpack:///./src/app/modules/notebook/process/update-notebook.process.ts","webpack:///./src/app/modules/notebook/services/notebook-data-access.class.ts","webpack:///./src/app/modules/notebook/services/notebook-data-access.interface.ts","webpack:///./src/app/modules/notebook/notebook.router.ts","webpack:///./src/app/modules/notebook/controllers/delete-notebook.controller.ts","webpack:///./src/app/modules/notebook/controllers/get-notebook-by-id.controller.ts","webpack:///./src/app/modules/notebook/controllers/list-notebook.controller.ts","webpack:///./src/app/modules/notebook/controllers/save-notebook.controller.ts","webpack:///./src/app/modules/notebook/controllers/update-notebook.controller.ts","webpack:///./src/app/modules/user/index.ts","webpack:///./src/app/modules/user/process/delete-user.process.ts","webpack:///./src/app/modules/user/process/get-user-by-id.process.ts","webpack:///./src/app/modules/user/process/list-user.process.ts","webpack:///./src/app/modules/user/process/save-user.process.ts","webpack:///./src/app/modules/user/process/update-user.process.ts","webpack:///./src/app/modules/user/services/user-data-access.class.ts","webpack:///./src/app/modules/user/services/user-data-access.interface.ts","webpack:///./src/app/modules/user/user.router.ts","webpack:///./src/app/modules/user/controllers/list-user.controller.ts","webpack:///./src/app/db-connections/user-db-connection.ts","webpack:///./src/app/modules/user/controllers/save-user.controller.ts","webpack:///external commonjs \"cors\"","webpack:///./src/app/modules/auth/index.ts","webpack:///./src/app/modules/auth/process/delete-auth.process.ts","webpack:///./src/app/modules/auth/process/get-auth-by-id.process.ts","webpack:///./src/app/modules/auth/process/list-auth.process.ts","webpack:///./src/app/modules/auth/process/sign-in.process.ts","webpack:///./src/app/modules/auth/process/update-auth.process.ts","webpack:///./src/app/modules/auth/services/auth-serivce.class.ts","webpack:///external commonjs \"googleapis\"","webpack:///./src/app/modules/auth/services/auth-service.interface.ts","webpack:///./src/app/modules/auth/auth.router.ts","webpack:///./src/app/modules/auth/controllers/sign-in.controller.ts","webpack:///./src/app/modules/auth/controllers/google-auth.controller.ts","webpack:///./src/app/modules/auth/process/google-auth.process.ts","webpack:///./src/app/modules/user/process/register-user.process.ts","webpack:///./src/app/modules/auth/controllers/get-session.controller.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"express\");","import { Router, json } from 'express';\nimport { entryRouter } from './modules/entry';\nimport { notebookRouter } from './modules/notebook';\nimport { userRouter } from './modules/user';\nimport cors from 'cors';\nimport { authRouter } from './modules/auth';\n\nexport const appRouter = Router();\n\nappRouter.use(\n  cors({\n    origin: ['http://localhost:7060', 'https://duxco-apps.github.io'],\n  })\n);\nappRouter.use(json());\nappRouter.use('/auth', authRouter);\nappRouter.use('/entry', entryRouter);\nappRouter.use('/notebook', notebookRouter);\nappRouter.use('/user', userRouter);\n","export * from './process/delete-entry.process';\nexport * from './process/get-entry-by-id.process';\nexport * from './process/list-entry.process';\nexport * from './process/save-entry.process';\nexport * from './process/update-entry.process';\nexport * from './services/entry-data-access.class';\nexport * from './services/entry-data-access.interface';\nexport * from './entry.router';\n","import { ErrorHandler } from '@components/error-handler';\nimport { IEntry } from '@journal/entites';\n\nimport { IEntryDataAccess } from '../services/entry-data-access.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  entryDataAccess: IEntryDataAccess;\n};\n\ntype Output = IEntry | null;\n\nexport async function deleteEntryProcess(\n  { id }: Input,\n  { entryDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('delete_entry');\n  errorHandler.attr('id').string(id).notEmpty();\n  errorHandler.throw();\n\n  await entryDataAccess.delete(id);\n\n  return;\n}\n","export * from './error-issue-handler.class';\nexport * from './error-handler.class';\nexport * from './error-issue.type';\nexport * from './error-issue-type.enum';\n","import { ErrorHandler } from './error-handler.class';\nimport { ErrorIssueType } from './error-issue-type.enum';\nimport { ErrorIssue } from './error-issue.type';\nimport { DateValidator } from './validator/date-validator.class';\nimport { StringValidator } from './validator/string-validator.class';\n\nexport class ErrorIssueHandler {\n  constructor(\n    private issues: ErrorIssue[] = [],\n    private errorHanlder: ErrorHandler | null = null\n  ) {}\n\n  public add(type: ErrorIssueType, expected?: string, actual?: string): this {\n    this.issues.push({ type, expected, actual });\n    return this;\n  }\n\n  public date(value: Date | string | null) {\n    return new DateValidator(value, this.issues);\n  }\n\n  public string(value: string | null) {\n    return new StringValidator(value, this.issues);\n  }\n\n  public throw(status?: number) {\n    if (this.errorHanlder != null) {\n      this.errorHanlder.throw(status);\n    }\n  }\n}\n","import { ErrorIssueType } from '../error-issue-type.enum';\nimport { ErrorIssue } from '../error-issue.type';\n\nexport class DateValidator {\n  private static regex = /^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})$/;\n  private continue: boolean;\n  private hasValidType: boolean | null;\n\n  constructor(\n    private value: Date | string | null,\n    private issues: ErrorIssue[]\n  ) {\n    this.continue = true;\n    this.hasValidType = null;\n    if (value != null) {\n      this.validateType();\n    }\n  }\n\n  public if(value: boolean): this {\n    this.continue = value;\n    return this;\n  }\n\n  public required(): this {\n    if (this.value == null) {\n      this.issues.push({\n        type: ErrorIssueType.Empty,\n      });\n    }\n    return this;\n  }\n\n  static isValidDate(value: string): boolean {\n    const dateFromRegex = DateValidator.regex.exec(value);\n    if (!dateFromRegex) {\n      return false;\n    }\n\n    const parsedDate = Date.parse(value);\n    if (Number.isNaN(parsedDate)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private validateType() {\n    if (this.hasValidType == null) {\n      if (this.value instanceof Date) {\n        this.hasValidType = true;\n      } else if (this.value != null && DateValidator.isValidDate(this.value)) {\n        this.hasValidType = true;\n      } else {\n        this.issues.push({\n          type: ErrorIssueType.ValueType,\n        });\n        this.hasValidType == false;\n      }\n    }\n  }\n}\n","export enum ErrorIssueType {\n  Access = 'ACCESS',\n  Empty = 'EMPTY',\n  Exists = 'EXISTS',\n  Internal = 'INTERNAL',\n  Length = 'LENGTH',\n  MaxLength = 'MAX_LENGTH',\n  MinLength = 'MIN_LENGTH',\n  ValueType = 'VALUE_TYPE',\n  Validity = 'VALIDITY',\n}\n","import { ErrorIssueType } from '../error-issue-type.enum';\nimport { ErrorIssue } from '../error-issue.type';\n\nexport class StringValidator {\n  private hasValue: boolean;\n  private hasValidType: boolean | null;\n\n  constructor(private value: string | null, private issues: ErrorIssue[]) {\n    this.hasValue = value != null;\n    this.hasValidType = null;\n  }\n\n  private checkType() {\n    if (this.hasValidType == null) {\n      this.hasValidType = typeof this.value === 'string';\n      if (!this.hasValidType) {\n        this.issues.push({\n          type: ErrorIssueType.ValueType,\n          expected: 'string',\n          actual:\n            this.value === null\n              ? 'null'\n              : this.value == undefined\n              ? 'undefined'\n              : typeof this.value,\n        });\n      }\n    }\n  }\n\n  length(min: number, max?: number) {\n    if (this.hasValidType && this.hasValue) {\n      this.checkType();\n      const fixed = max == null ? min : null;\n      if (fixed != null) {\n        if (this.value != null && this.value.length !== fixed) {\n          this.issues.push({\n            type: ErrorIssueType.Length,\n            expected: min.toString(),\n            actual: this.value.length.toString(),\n          });\n        }\n      } else {\n        this.minLength(min).maxLength(max ?? 0);\n      }\n    }\n  }\n\n  maxLength(length: number): this {\n    this.checkType();\n    if (this.hasValidType && this.value != null) {\n      if (this.value.length > length) {\n        this.issues.push({\n          type: ErrorIssueType.MaxLength,\n          expected: length.toString(),\n          actual: this.value.length.toString(),\n        });\n      }\n    }\n    return this;\n  }\n\n  minLength(length: number): this {\n    this.checkType();\n    if (this.hasValidType && this.value != null) {\n      if (this.value.length < length) {\n        this.issues.push({\n          type: ErrorIssueType.MinLength,\n          expected: length.toString(),\n          actual: this.value.length.toString(),\n        });\n      }\n    }\n    return this;\n  }\n\n  notEmpty(): this {\n    this.checkType();\n    if (this.hasValue && this.value === '') {\n      this.issues.push({\n        type: ErrorIssueType.Empty,\n        expected: 'NON_EMPTY_STRING',\n        actual: this.value == null ? typeof this.value : '',\n      });\n    }\n    return this;\n  }\n}\n","import { ErrorIssueHandler } from './error-issue-handler.class';\nimport { ErrorIssueType } from './error-issue-type.enum';\nimport { ErrorIssue } from './error-issue.type';\nimport { ErrorObject } from './error-object.class';\n\nexport class ErrorHandler {\n  private attrIssues: Map<string, ErrorIssue[]>;\n  constructor(private process: string) {\n    this.attrIssues = new Map();\n  }\n\n  public attr(name: string): ErrorIssueHandler {\n    const issues = this.attrIssues.get(name) ?? [];\n    this.attrIssues.set(name, issues);\n    return new ErrorIssueHandler(issues, this);\n  }\n\n  throw(httpStatus = 500) {\n    const issues = Array.from(this.attrIssues.entries());\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const issuesWithValues = issues.filter(([_, issues]) => issues.length > 0);\n    if (issuesWithValues.length > 0) {\n      throw new ErrorObject(\n        this.process,\n        Object.fromEntries(issuesWithValues),\n        httpStatus\n      );\n    }\n  }\n\n  static catch(error: Error | ErrorObject): ErrorObject {\n    if (error instanceof ErrorObject) {\n      return error;\n    }\n\n    return {\n      httpStatus: 500,\n      process: 'Unknown',\n      issues: {\n        stack: [\n          {\n            type: ErrorIssueType.Internal,\n            expected: 'null',\n            actual: error.stack,\n          },\n        ],\n      },\n      message: error.message,\n    };\n  }\n}\n","import { ErrorIssue } from './error-issue.type';\n\nexport class ErrorObject {\n  constructor(\n    public process: string,\n    public issues: { [key: string]: ErrorIssue[] },\n    public httpStatus?: number,\n    public message?: string\n  ) {}\n}\n","import { ErrorIssueType } from './error-issue-type.enum';\n\nexport type ErrorIssue = {\n  type: ErrorIssueType;\n  expected?: string;\n  actual?: string;\n};\n","import { ErrorHandler } from '@components/error-handler';\nimport { IEntry } from '@journal/entites';\n\nimport { IEntryDataAccess } from '../services/entry-data-access.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  entryDataAccess: IEntryDataAccess;\n};\n\ntype Output = IEntry | null;\n\nexport async function getEntryByIDProcess(\n  { id }: Input,\n  { entryDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('get_entry_by_id');\n  errorHandler.attr('id').string(id).notEmpty();\n  errorHandler.throw();\n\n  return await entryDataAccess.getByID(id);\n}\n","import { ErrorHandler } from '@components/error-handler';\nimport { IEntry } from '@journal/entites';\n\nimport { IEntryDataAccess } from '../services/entry-data-access.interface';\n\ntype Input = {\n  userID: string;\n  notebookID: string;\n  offset: number;\n};\n\ntype Deps = {\n  entryDataAccess: IEntryDataAccess;\n};\n\ntype Output = IEntry[];\n\nexport async function listEntryProcess(\n  { userID, notebookID, offset }: Input,\n  { entryDataAccess }: Deps\n): Promise<Output> {\n  const limit = 100;\n  const errorHandler = new ErrorHandler('list_entry');\n  errorHandler.attr('notebookID').string(notebookID).notEmpty();\n  errorHandler.throw();\n\n  return await entryDataAccess.list({ userID, notebookID, offset, limit });\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IEntryDataAccess } from '../services/entry-data-access.interface';\nimport { Entry } from '@journal/entites';\n\ntype Input = {\n  userID: string;\n  notebookID: string;\n  text: string;\n  start?: Date;\n  endFixed: string;\n  includesTime: boolean;\n};\n\ntype Deps = {\n  entryDataAccess: IEntryDataAccess;\n};\n\ntype Output = { id: string };\n\nexport async function saveEntryProcess(\n  { userID, notebookID, text, endFixed }: Input,\n  { entryDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('save_entry');\n  errorHandler.attr('notebookID').string(notebookID).notEmpty();\n  errorHandler.attr('text').string(text).notEmpty().maxLength(100);\n  errorHandler.attr('endFixed').string(endFixed).notEmpty();\n  errorHandler.throw();\n\n  const entry = Entry.buildForInsert({\n    userID,\n    notebookID,\n    text,\n    endFixed,\n  });\n\n  const id = await entryDataAccess.save(entry.values);\n\n  return { id };\n}\n","export * from './lib/entry';\nexport * from './lib/notebook';\nexport * from './lib/user';\n","export * from './entry.class';\nexport * from './entry.interface';\n","import { IEntry } from './entry.interface';\n\nexport class Entry {\n  constructor(readonly values: IEntry) {}\n\n  // Factories\n  static buildForInsert(values: {\n    userID: string;\n    notebookID: string;\n    text: string;\n    endFixed: string;\n  }): Entry {\n    return new Entry({\n      ...values,\n      start: null,\n      startFixed: null,\n      end: new Date(values.endFixed),\n      includesTime: false,\n    });\n  }\n\n  // Helper functions\n\n  static generateLocalDateTimeString(date: Date): string {\n    return Entry.generateLocalDate(date).toISOString().split('.')[0];\n  }\n\n  static generateLocalDate(date: Date): Date {\n    const offset = new Date().getTimezoneOffset() * 60 * 1000;\n    console.log('entry.class.ts:30', offset);\n    return new Date(date.getTime() - offset);\n    // return new Date(\n    //   new Date().setMinutes(new Date().getMinutes() - offsetMinutes)\n    // );\n  }\n\n  static generateDate(date = new Date()): string {\n    const day = `0${date.getDate()}`.slice(-2);\n    const month = `0${date.getMonth() + 1}`.slice(-2);\n    const year = `${date.getFullYear()}`;\n    return `${year}-${month}-${day}`;\n  }\n\n  static genearteReadableDate(date: Date): string {\n    const todayDateString = Entry.generateLocalDateTimeString(new Date()).split(\n      'T'\n    )[0];\n    const dateString = date.toISOString().split('T')[0];\n    const isToday = todayDateString === dateString;\n    const weekday = isToday\n      ? 'Today'\n      : date.toLocaleDateString('en-US', { weekday: 'long' });\n    const month = date.toLocaleDateString('en-US', { month: 'short' });\n    const day = date.toLocaleDateString('en-US', { day: 'numeric' });\n    const year = date.toLocaleDateString('en-US', { year: 'numeric' });\n    return `${weekday} - ${month} ${day}, ${year}`;\n  }\n\n  static generateTime(): string {\n    const now = new Date();\n    const hours = `0${now.getHours()}`.slice(-2);\n    const minutes = `0${now.getMinutes()}`.slice(-2);\n    return `${hours}:${minutes}`;\n  }\n\n  static groupByDate(entries: IEntry[]): {\n    key: string;\n    value: IEntry[];\n  }[] {\n    // Transform end date to local time\n    const localEntries = entries.map((entry) => {\n      if (entry.endFixed == null) {\n        console.log('entry.class.ts:68', new Date(new Date(entry.end)));\n        entry.endFixed = Entry.generateLocalDateTimeString(new Date(entry.end));\n      }\n      return entry;\n    });\n\n    console.log('entry.class.ts:73', { localEntries });\n\n    const map = new Map<string, IEntry[]>();\n    let key: string | null = null;\n    for (const entry of localEntries) {\n      const dateString = entry.endFixed.split('T')[0];\n      if (key != dateString) {\n        key = dateString;\n        map.set(key, []);\n      }\n      const group = map.get(key) ?? [];\n      group.push(entry);\n    }\n\n    return [...map.entries()].map(([key, value]) => ({ key, value }));\n  }\n\n  static parse(entry: IEntry): IEntry {\n    if (entry.start != null) {\n      entry.start = new Date(entry.start);\n    }\n    entry.end = new Date(entry.end);\n    return entry;\n  }\n}\n","export interface IEntry {\n  id?: string;\n  userID: string;\n  notebookID: string;\n  text: string;\n  start: Date | null;\n  startFixed: string | null;\n  end: Date;\n  endFixed: string;\n  includesTime: boolean;\n}\n","export * from './notebook.class';\nexport * from './notebook.interface';\n","import { ErrorIssueHandler } from '@components/error-handler';\nimport { INotebook } from './notebook.interface';\n\nexport class Notebook {\n  constructor(private values: INotebook) {}\n\n  set name(value: string) {\n    this.values.name = value;\n  }\n\n  validateName(issueHanlder: ErrorIssueHandler) {\n    issueHanlder.string(this.values.name).notEmpty().maxLength(50);\n  }\n}\n","export interface INotebook {\n  id?: string;\n  userID: string;\n  name: string;\n}\n","export * from './user.class';\nexport * from './user.interface';\n","import { IUser } from './user.interface';\n\nexport class User {\n  constructor(readonly values: IUser) {}\n}\n","export interface IUser {\n  id?: string;\n  email: string;\n  name: string;\n  surname: string;\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IEntryDataAccess } from '../services/entry-data-access.interface';\n\ntype Input = {\n  id: string;\n  text: string;\n  date: string;\n  start?: string;\n  end: string;\n};\n\ntype Deps = {\n  entryDataAccess: IEntryDataAccess;\n};\n\ntype Output = void;\n\nexport async function updateEntryProcess(\n  { id, text, date, start, end }: Input,\n  { entryDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('update_entry');\n  errorHandler.attr('text').string(text).notEmpty().maxLength(100);\n  errorHandler.attr('date').string(date).notEmpty().length(10);\n  errorHandler.attr('start').string(start).length(5);\n  errorHandler.attr('end').string(end).length(5);\n  errorHandler.throw();\n\n  await entryDataAccess.update(id, {\n    text,\n    date,\n    start,\n    end,\n  });\n}\n","import { Connection } from 'mongoose';\n\nimport { MongooseDataAccess } from '@node-components';\nimport { IEntry } from '@journal/entites';\n\nimport { IEntryDataAccess, ListFilter } from './entry-data-access.interface';\n\nexport class EntryDataAccess implements IEntryDataAccess {\n  private dataAccess: MongooseDataAccess<IEntry>;\n\n  constructor(dbConnection: Connection) {\n    this.dataAccess = new MongooseDataAccess(dbConnection, 'Entry', {\n      _id: 'id',\n    });\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.dataAccess.model.deleteOne(this.dataAccess.toDocument({ id }));\n  }\n\n  async getByID(id: string): Promise<IEntry | null> {\n    return await this.dataAccess.model\n      .findOne(this.dataAccess.toDocument({ id }))\n      .then((data) => this.dataAccess.toData(data));\n  }\n\n  async list({\n    userID,\n    notebookID,\n    offset,\n    limit,\n  }: ListFilter): Promise<IEntry[]> {\n    return await this.dataAccess.model\n      .find({ userID, notebookID })\n      .skip(offset)\n      .sort({ end: -1, start: -1 })\n      .limit(limit)\n      .then((value) => this.dataAccess.toDataArray(value));\n  }\n\n  async save(values: IEntry): Promise<string> {\n    return await this.dataAccess.insert(values);\n  }\n\n  async update(id: string, values: IEntry): Promise<void> {\n    await this.dataAccess.model.updateOne(\n      this.dataAccess.toDocument({ id }),\n      this.dataAccess.toDocument(values)\n    );\n  }\n}\n","export * from './lib/mongoose-data-access/mongoose-data-access';\n","import {\n  AnyKeys,\n  Connection,\n  Document,\n  Model,\n  createConnection,\n} from 'mongoose';\nimport { ObjectId } from 'mongodb';\n\ntype ConnectionData = {\n  host: string;\n  database: string;\n  user?: string;\n  password?: string;\n};\n\nexport class MongooseDataAccess<T> {\n  readonly model: Model<Document>;\n  private fieldsMap: Map<string, string>;\n\n  constructor(\n    public dbConnection: Connection,\n    modelName: string,\n    fieldsMap?: Record<string, string>\n  ) {\n    this.model = this.dbConnection.model(modelName);\n    this.fieldsMap = new Map(Object.entries(fieldsMap ?? {}));\n  }\n\n  static createConnection({ host, database }: ConnectionData): Connection {\n    const connectionString = `mongodb://${host}/${database}`;\n    const connection: Connection = createConnection(connectionString);\n\n    const print = (message: string) => {\n      console.log('[MongooseDataAccess]', message, database, '@', host);\n    };\n\n    connection.on('connected', () => {\n      print('Connected to:');\n    });\n\n    connection.on('error', () => {\n      print('Failed to connect to:');\n    });\n    return connection;\n  }\n\n  async insert(data: T): Promise<string> {\n    const model = new this.model(this.toDocument(data));\n    await model.save();\n    return model._id;\n  }\n\n  public toDocument(data: AnyKeys<T | unknown>): AnyKeys<Document> {\n    if (data === null) return {};\n    const dataObject: Record<string, unknown> = Object.assign({}, data);\n    const document: Record<string, unknown> = Object.assign({}, dataObject);\n    for (const [field, attr] of this.fieldsMap.entries()) {\n      if (field !== attr) {\n        if (Object.prototype.hasOwnProperty.call(dataObject, attr)) {\n          document[field] = dataObject[attr];\n          delete document[attr];\n        }\n      }\n    }\n    const { _id } = document;\n    if (_id == null) {\n      delete document['_id'];\n    }\n    return document;\n  }\n\n  static toID(value: string): ObjectId {\n    return new ObjectId(value);\n  }\n\n  public toData<R = T>(value: Document | null): null | R {\n    if (value == null) {\n      return null;\n    }\n    const json = value.toJSON();\n    const documentObject: AnyKeys<Document> = Object.assign({}, json);\n    documentObject['_id'] = `${documentObject['_id']}`;\n    const data: Record<string, unknown> = {};\n    for (const field in documentObject) {\n      if (Object.prototype.hasOwnProperty.call(documentObject, field)) {\n        const value = documentObject[field];\n        const attr = this.fieldsMap.get(field) ?? field;\n        data[attr] = value;\n      }\n    }\n    return data as unknown as R;\n  }\n\n  public toDataArray(documents: Document[]): T[] {\n    return documents.map((doc) => this.toData(doc));\n  }\n}\n","module.exports = require(\"mongoose\");","module.exports = require(\"mongodb\");","import { IEntry } from '@journal/entites';\n\nexport type ListFilter = {\n  userID: string;\n  notebookID: string;\n  offset: number;\n  limit: number;\n};\n\nexport interface IEntryDataAccess {\n  delete(id: string): Promise<void>;\n  getByID(id: string): Promise<IEntry | null>;\n  list(filter: ListFilter): Promise<IEntry[]>;\n  save(values: IEntry): Promise<string>;\n  update(id: string, values: IEntry | unknown): Promise<void>;\n}\n","import { Router } from 'express';\nimport { deleteEntryController } from './controllers/delete-entry.controller';\nimport { getEntryByIDController } from './controllers/get-entry-by-id.controller';\nimport { listEntryController } from './controllers/list-entry.controller';\nimport { saveEntryController } from './controllers/save-entry.controller';\nimport { updateEntryController } from './controllers/update-entry.controller';\nimport { verifyRequestSession } from '../../middlewares/verify-session.middle';\n\nexport const entryRouter = Router();\n\nentryRouter.use('/', verifyRequestSession);\nentryRouter.route('/').get(listEntryController).post(saveEntryController);\nentryRouter\n  .route('/:id')\n  .get(getEntryByIDController)\n  .patch(updateEntryController)\n  .delete(deleteEntryController);\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { deleteEntryProcess } from '../process/delete-entry.process';\nimport { EntryDataAccess } from '../services/entry-data-access.class';\n\ntype Params = { id: string };\ntype Query = unknown;\ntype Body = unknown;\n\nexport async function deleteEntryController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await deleteEntryProcess(\n      { id: req.params.id },\n      {\n        entryDataAccess: new EntryDataAccess(undefined),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError_DEPRECATE_2(httpStatus, rest);\n  }\n}\n","export { Response } from 'express';\nexport * from './api-response.class';\nexport * from './body-request.type';\nexport * from './response-handler.class';\nexport * from './request-hanlder.function';\n\nexport * from './hanlder-error.function';\nexport * from './request-with-session.interface';\n","import { Response } from 'express';\nimport { HTTPAppError } from '../app-error/http-error.class';\nimport { HTTPError } from '../http/http-error.type';\nimport { IssueHanlder } from '../issue-handler/issue-handler.class';\nimport { EIssueType } from '../issue-handler/issue-type.enum';\nimport { ErrorHandler } from '../error-handler/error-handler.class';\nimport { ErrorObject } from '../error-handler/error-object.class';\n\ntype Error = {\n  message: string;\n  issues: {\n    [className: string]: {\n      [fieldName: string]: {\n        type: EIssueType;\n        reference?: string;\n      };\n    }[];\n  };\n};\n\nexport class APIResponse {\n  static Base = Response;\n\n  private response: Response;\n\n  constructor(response: Response) {\n    this.response = response;\n  }\n\n  public sendData<R>(data: R = null) {\n    this.response.status(200).send({ data });\n  }\n\n  public async asyncData<R>(promise: Promise<R>): Promise<void> {\n    const data = await promise;\n    this.sendData(data);\n  }\n\n  public async tryAsyncData<R>(promise: Promise<R>): Promise<void> {\n    try {\n      this.sendData(await promise);\n    } catch (error) {\n      this.sendError_DEPRECATED(error);\n    }\n  }\n\n  public sendError_DEPRECATED(error: Error | IssueHanlder | HTTPAppError) {\n    if (error instanceof HTTPAppError) {\n      this.sendResponse(error.status, null, error);\n    }\n\n    const issueHanlder: IssueHanlder =\n      error instanceof IssueHanlder\n        ? error\n        : new IssueHanlder().add('__Process__', 'execution', {\n            type: EIssueType.Exception,\n          });\n\n    this.sendResponse(issueHanlder.httpStatus, null, {\n      message: issueHanlder.message,\n      issues: issueHanlder.toClassIssues(),\n    });\n  }\n\n  private sendResponse(\n    status = 200,\n    data: unknown,\n    error: HTTPError | HTTPAppError\n  ) {\n    this.response.status(status).send({\n      data,\n      error,\n    });\n  }\n\n  public sendError_DEPRECATE_2(status: number, error: unknown) {\n    this.response.status(status).send({ error });\n  }\n\n  public sendError(error: unknown, status = 500) {\n    this.response.status(status).send({ error });\n  }\n\n  public notImplemented() {\n    const issue = new IssueHanlder();\n    issue.add('Router', 'endpiont', { type: EIssueType.NotImplemented });\n    this.sendError_DEPRECATED(issue);\n  }\n}\n","import { PropsIssues } from '../prop-issue/props-issues.type';\nimport { AppProcess } from './app-error.class';\n\nexport class HTTPAppError extends AppProcess {\n  readonly status: number;\n\n  constructor(\n    status: number,\n    process: string,\n    message: string,\n    issues: Map<string, PropsIssues>\n  ) {\n    super(process, issues);\n    this.status = status;\n  }\n}\n","import { ProcessIssues } from './error-issues.type';\n\n// export interface IAppError extends Error {\n//   process: string;\n//   message: string;\n//   httpStatus: number | null;\n//   issues: ProcessIssues;\n// }\n\nexport class AppProcess extends Error {\n  private process: string;\n  private issues: ProcessIssues;\n  private httpStatus: number = null;\n\n  constructor(process: string, issues: ProcessIssues = new Map()) {\n    super(`Error while running process ${process}`);\n    this.process = process;\n    this.issues = issues;\n  }\n\n  addIssues(issues: ProcessIssues) {\n    issues.forEach((issue, key) => this.issues.set(key, issue));\n  }\n\n  throw(httpStatus: number = null) {\n    if (this.issues.size > 0) {\n      this.httpStatus = httpStatus;\n      throw this;\n    }\n  }\n\n  // get values(): IAppError {\n  //   return {\n  //     name: this.name,\n  //     message: this.message,\n  //     httpStatus: this.httpStatus,\n  //     issues: this.issues,\n  //   };\n  // }\n}\n","import { ClassIssues } from './class-issues.type';\nimport { FieldIssues } from './field-issues.type';\nimport { Issue } from './issue.type';\n\ntype ClassName = string;\ntype FieldName = string;\n\nexport class IssueHanlder {\n  classes: Map<ClassName, Map<FieldName, Issue[]>>;\n  httpStatus: number;\n  message: string;\n\n  constructor() {\n    this.classes = new Map();\n    this.httpStatus = 500;\n    this.message = 'Error while running the process.';\n  }\n\n  public add(className: string, fieldName: string, issue: Issue): this {\n    const fields = this.getFields(className);\n    const issues = fields.get(fieldName) ?? [];\n    issues.push(issue);\n\n    if (!this.classes.has(className)) {\n      this.classes.set(className, fields);\n    }\n    if (!fields.has(fieldName)) {\n      fields.set(fieldName, issues);\n    }\n    return this;\n  }\n\n  private getFields(className: string) {\n    return this.classes.get(className) ?? new Map<string, Issue[]>();\n  }\n\n  public throw(message?: string, httpStatus?: number) {\n    if (message) {\n      this.message = message;\n    }\n    if (httpStatus) {\n      this.httpStatus = httpStatus;\n    }\n    if (this.classes.size > 0) {\n      throw this;\n    }\n  }\n\n  public toClassIssues(): ClassIssues {\n    const classIssues: ClassIssues = {};\n    this.classes.forEach((fields, fieldName) => {\n      const fieldIssues: FieldIssues = {};\n      fields.forEach((issues, fieldName) => {\n        fieldIssues[fieldName] = issues;\n      });\n      classIssues[fieldName] = fieldIssues;\n    });\n    return classIssues;\n  }\n}\n","export enum EIssueType {\n  Auth = 'auth',\n  Duplicate = 'duplicate',\n  Emtpy = 'empty',\n  Exception = 'exception',\n  MaxLength = 'max_length',\n  MinLength = 'min_length',\n  MaxValue = 'max_value',\n  MinValue = 'min_value',\n  NoValue = 'no_value',\n  NotImplemented = 'not_implemented',\n  Type = 'type',\n}\n","import { Request } from 'express';\n\nexport type PostRequest<Body, Params = unknown, Query = unknown> = Request<\n  Params,\n  unknown,\n  Body,\n  Query\n>;\n\nexport type PushRequest<Body, Params = unknown, Query = unknown> = PostRequest<\n  Body,\n  Params,\n  Query\n>;\n","import { APIResponse } from './api-response.class';\n\nexport class ResponseHanlder extends APIResponse {}\n","import { Request, Response } from 'express';\nimport { ResponseHanlder } from './response-handler.class';\n\nexport function createRequestHanlder(\n  callback: (req: Request, res: ResponseHanlder) => Promise<void>\n) {\n  return (req: Request, res: Response) => {\n    callback(req, new ResponseHanlder(res));\n  };\n}\n","import { AppProcess } from '../app-error/app-error.class';\n\n// export function handleError(res, error: Error | AppProcess) {\n//   if (error instanceof AppProcess) {\n//   }\n// }\n","import { Request } from 'express';\nexport interface RequestWithSession<Session, Params, Payload, Body, Query>\n  extends Request<Params, Payload, Body, Query> {\n  session: Session;\n}\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { getEntryByIDProcess } from '../process/get-entry-by-id.process';\nimport { EntryDataAccess } from '../services/entry-data-access.class';\nimport { journalDBConnection } from '../../../db-connections/journal-db-connection';\n\ntype Params = { id: string };\ntype Query = unknown;\ntype Body = unknown;\n\nexport async function getEntryByIDController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await getEntryByIDProcess(\n      { id: req.params.id },\n      {\n        entryDataAccess: new EntryDataAccess(journalDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError_DEPRECATE_2(httpStatus, rest);\n  }\n}\n","import { MongooseDataAccess } from '@components/data-access';\nimport { Connection } from 'mongoose';\nimport { entryMongooseDataModel as entryDataModel } from '@journal/data-models';\nimport { notebookMongooseDataModel as notebookDataModel } from '@journal/data-models';\nimport { appEnv } from '../app-env';\n\nexport const journalDBConnection: Connection =\n  MongooseDataAccess.createConnection(appEnv.databases.journal);\njournalDBConnection.model(entryDataModel.name, entryDataModel.schema);\njournalDBConnection.model(notebookDataModel.name, notebookDataModel.schema);\n","export * from './mongoose-data-access';\nexport * from './mongoose-data-schema';\nexport * from './mongoose-data-schema.interface';\n\nexport * from './data-access.interface';\nexport * from './mongo/mongo-data-access.interface';\nexport * from './mongo/mongo-data-access.class';\n","import {\n  Document,\n  Connection,\n  Model,\n  createConnection,\n  connect,\n  FilterQuery,\n  AnyKeys,\n} from 'mongoose';\nimport { MongooseDataSchema } from './mongoose-data-schema';\nimport { ISelectOptions } from './select-options.interface';\n\ntype AnyKey<T> = AnyKeys<T>;\ntype KeyValue = { [key: string]: unknown };\ntype MongooseDataAccessOptions = {\n  fieldsMap?: Map<string, string>;\n  logActivity?: boolean;\n};\n\nexport class MongooseDataAccess<T> {\n  readonly connection: Connection;\n  readonly dataSchema: MongooseDataSchema;\n  readonly model: Model<T & Document>;\n  readonly logActivity: boolean;\n\n  constructor(\n    connection: Connection,\n    dataSchema: MongooseDataSchema,\n    options?: MongooseDataAccessOptions\n  ) {\n    this.connection = connection;\n    this.dataSchema = dataSchema;\n\n    // if (this.dataSchema) {\n    this.model = this.createModel();\n    this.dataSchema.setFieldsMap(options?.fieldsMap ?? new Map());\n    // }\n\n    this.logActivity = options?.logActivity ?? false;\n  }\n\n  private createModel() {\n    const values = this.dataSchema.getValues();\n    return this.connection.model<T & Document>(\n      values.name,\n      values.schema,\n      values.collection\n    );\n  }\n\n  public async count(filter: FilterQuery<T> = {}): Promise<number> {\n    const filterQuery = this.mapDataToDoc(filter);\n    return await this.model.countDocuments(filterQuery).exec();\n  }\n\n  public static async connect(connectionString: string): Promise<Connection> {\n    const connection = await connect(connectionString, {\n      connectTimeoutMS: 5,\n    });\n    return connection.connection;\n  }\n\n  public static createConnection(connectionString: string): Connection {\n    const connection: Connection = createConnection(connectionString);\n\n    connection.on('connected', () => {\n      console.log(\n        'Connected to database:',\n        connection.db.databaseName,\n        '@',\n        connection.host\n      );\n    });\n\n    connection.on('error', () => {\n      console.log(\n        'Error connecting to the database: ',\n        connection.config.databaseName,\n        connection.host\n      );\n    });\n\n    return connection;\n  }\n\n  public async delete(filter: FilterQuery<T & Document> = {}): Promise<void> {\n    const filterQuery = this.mapDataToDoc(filter);\n    return this.model.deleteMany(filterQuery).exec().then();\n  }\n\n  public async insert(data: AnyKey<T>): Promise<string> {\n    const documentData = this.mapDataToDoc(data);\n    console.log('mongoose-data-access.ts:70', { documentData });\n    const instance = new this.model(documentData);\n    const id = await instance.save().then(() => instance.id);\n    this.printLog(`New ${this.dataSchema.name} inserted with id: ${id}`);\n    return id;\n  }\n\n  public async select(\n    filter: FilterQuery<T> = {},\n    options?: ISelectOptions\n  ): Promise<T[]> {\n    const filterQuery = this.mapDataToDoc(filter);\n    const query = this.model.find(filterQuery, this.dataSchema.project);\n    options = options ?? {};\n    if (options?.sort) query.sort(options.sort);\n    if (options?.offset) query.skip(options.offset);\n    if (options?.limit) query.limit(options.limit);\n    return query.lean().then((docs) => this.mapDocumentsToData(docs));\n  }\n\n  public async selectOne(filter: FilterQuery<T>): Promise<T | null> {\n    const filterQuery = this.mapDataToDoc(filter);\n    return this.model\n      .findOne(filterQuery, this.dataSchema.project)\n      .lean()\n      .exec()\n      .then((doc) => {\n        return doc !== null ? this.mapDocumentToData(doc) : null;\n      });\n  }\n\n  public async update(\n    filter: FilterQuery<T>,\n    data: AnyKey<T & Document>\n  ): Promise<number> {\n    // const updateQuery = data as UpdateQuery<T & Document>;\n    const filterQuery = this.mapDataToDoc(filter);\n    return (await this.model.updateMany(filterQuery, data).exec()).matchedCount;\n  }\n\n  // Helper functions ==============================================\n\n  private printLog(message: string): void {\n    if (this.logActivity) {\n      console.log(\n        `[${new Date().toISOString()}][DB:${this.connection.db.databaseName}]`,\n        message\n      );\n    }\n  }\n\n  private mapDataToDoc(data: AnyKey<T>): AnyKeys<Document> {\n    if (data === null) return {};\n    const dataObject: KeyValue = Object.assign({}, data);\n    const document: KeyValue = Object.assign({}, dataObject);\n    for (const [field, attr] of this.dataSchema.fieldsToAttrs.entries()) {\n      if (field !== attr) {\n        if (Object.prototype.hasOwnProperty.call(dataObject, attr)) {\n          document[field] = dataObject[attr];\n          delete document[attr];\n        }\n      }\n    }\n    const { _id } = document;\n    if (_id == null) {\n      delete document['_id'];\n    }\n    return document;\n  }\n\n  private mapDocumentToData(document: AnyKeys<T | Document> | null): T {\n    const documentObject: KeyValue = Object.assign({}, document);\n    documentObject['_id'] = `${documentObject['_id']}`;\n    const data: KeyValue = {};\n    for (const field in documentObject) {\n      if (Object.prototype.hasOwnProperty.call(documentObject, field)) {\n        const value = documentObject[field];\n        const attr = this.dataSchema.fieldsToAttrs.get(field) ?? field;\n        data[attr] = value;\n      }\n    }\n    return data as unknown as T;\n  }\n\n  private mapDocumentsToData(documents: AnyKeys<T | Document>[]): T[] {\n    return documents.map((doc) => this.mapDocumentToData(doc));\n  }\n}\n","import { Schema } from 'mongoose';\nimport { IMongooseDataSchema } from './mongoose-data-schema.interface';\n\ntype TSchemaDataType =\n  | typeof Schema.Types.ObjectId\n  | typeof Schema.Types.Number\n  | typeof Schema.Types.String\n  | typeof Schema.Types.Boolean\n  | typeof Schema.Types.Subdocument;\n\ntype TField = { [name: string]: TSchemaDataType | [TSchemaDataType] };\ntype TProjection = { [key: string]: 0 | 1 };\n\nexport enum MongooseDataType {\n  BOOLEAN,\n  ID,\n  NUMBER,\n  OBJECT,\n  STRING,\n}\n\nexport type MongooseSchema = {};\n\nexport class MongooseDataSchema {\n  readonly name: string;\n  readonly collection: string;\n  private fields: TField;\n  public attrsToFields: Map<string, string>;\n  public fieldsToAttrs: Map<string, string>;\n  public project: TProjection;\n\n  private getFieldSetter = (isArray: boolean) => {\n    return {\n      id: (name: string, nameInDatabase: string | null = null) =>\n        this.setField(name, MongooseDataType.ID, nameInDatabase, isArray),\n      number: (name: string, nameInDatabase: string | null = null) =>\n        this.setField(name, MongooseDataType.NUMBER, nameInDatabase, isArray),\n      string: (name: string, nameInDatabase: string | null = null) =>\n        this.setField(name, MongooseDataType.STRING, nameInDatabase, isArray),\n      boolean: (name: string, nameInDatabase: string | null = null) =>\n        this.setField(name, MongooseDataType.BOOLEAN, nameInDatabase, isArray),\n      object: (name: string, nameInDatabase: string | null = null) =>\n        this.setField(name, MongooseDataType.OBJECT, nameInDatabase, isArray),\n    };\n  };\n\n  public field = {\n    ...this.getFieldSetter(false),\n    array: this.getFieldSetter(true),\n    object: this.getFieldSetter(false),\n  };\n\n  constructor(name: string, collection: string) {\n    this.name = name;\n    this.collection = collection;\n    this.fields = {};\n    this.attrsToFields = new Map();\n    this.fieldsToAttrs = new Map();\n    this.project = {};\n  }\n\n  public getValues(): IMongooseDataSchema {\n    return {\n      name: this.name,\n      collection: this.collection,\n      schema: new Schema(this.fields),\n    };\n  }\n\n  public static fieldFactory(\n    name: string,\n    dataType: MongooseDataType,\n    isArray = false\n  ): TField {\n    let computedType: TSchemaDataType | null = null;\n    switch (dataType) {\n      case MongooseDataType.ID:\n        computedType = Schema.Types.ObjectId;\n        break;\n\n      case MongooseDataType.NUMBER:\n        computedType = Schema.Types.Number;\n        break;\n\n      case MongooseDataType.STRING:\n        computedType = Schema.Types.String;\n        break;\n\n      case MongooseDataType.BOOLEAN:\n        computedType = Schema.Types.Boolean;\n        break;\n      case MongooseDataType.OBJECT:\n        computedType = Schema.Types.Subdocument;\n        break;\n    }\n    return { [name]: isArray ? [computedType] : computedType };\n  }\n\n  private setField(\n    name: string,\n    type: MongooseDataType,\n    nameInDatabaes: string | null = null,\n    isArray = false\n  ) {\n    if (nameInDatabaes != null) {\n      this.addFieldAttr(nameInDatabaes, name);\n    }\n    const field = MongooseDataSchema.fieldFactory(\n      nameInDatabaes ?? name,\n      type,\n      isArray\n    );\n    this.fields = { ...this.fields, ...field };\n    this.project[nameInDatabaes ?? name] = 1;\n  }\n\n  public setFieldsMap(map: Map<string, string>) {\n    for (const [field, attr] of map.entries()) {\n      this.addFieldAttr(field, attr);\n    }\n  }\n\n  private addFieldAttr(field: string, attr: string) {\n    this.attrsToFields.set(attr, field);\n    this.fieldsToAttrs.set(field, attr);\n  }\n\n  public only(fields: string[]): void {\n    this.project = { _id: 1 };\n    fields.forEach((field) => {\n      this.project[field] = 1;\n    });\n  }\n}\n","import { Schema } from 'mongoose';\n\ntype Mixed = { [field: string]: unknown };\n\nexport interface IMongooseDataSchema {\n  name: string;\n  collection: string;\n  schema: Schema;\n  data?: Mixed[];\n}\n","type Suggested<T> = T | Record<string, unknown>;\n\nexport interface IDataAccess<Values, Filter, Options> {\n  count: (filter: Filter) => Promise<number>;\n  delete: (filter: Filter) => Promise<number>;\n  insert: (values: Suggested<Values>) => Promise<string>;\n  select: <R = Values>(filter?: Filter, options?: Options) => Promise<R[]>;\n  selectOne: <R = Values>(\n    filter?: Filter,\n    options?: Options\n  ) => Promise<R | null>;\n  update: (filter: Filter, values: Suggested<Values>) => Promise<number>;\n}\n","import { IDataAccess } from '../data-access.interface';\nimport { Filter, FindOptions } from 'mongodb';\n\nexport type IMongoDataAccess<T> = IDataAccess<T, Filter<T>, FindOptions>;\n","import {\n  Collection,\n  Db,\n  Document,\n  Filter,\n  FindOptions,\n  MongoClient,\n  ObjectId,\n} from 'mongodb';\nimport { IMongoDataAccess } from './mongo-data-access.interface';\n\ntype Connection = Db;\ntype Suggested<T> = Record<string, unknown> | T;\ntype FieldsProps = { [key: string]: string };\n\nexport type DBConnection = Db;\n\nexport interface DataAccessOptions {\n  fieldsProps?: FieldsProps;\n  idFields?: (string | RegExp)[];\n}\n\nconst logPrefix = '[MongoDataAccess]';\n\nexport class MongoDataAccess<T>\n  // implements IDataAccess<Suggested<T>, Filter<T>, FindOptions>\n  implements IMongoDataAccess<T>\n{\n  readonly collection: Collection;\n  private fieldsProps: FieldsProps | null = null;\n  private fieldsPropsMap: Map<string, string> = null;\n  // private idFieldsSet: Set<string> | null = null;\n  private idFields: (string | RegExp)[] = [];\n\n  constructor(\n    private connection: Connection,\n    private collectionName: string,\n    options?: DataAccessOptions\n  ) {\n    this.collection = connection.collection(collectionName);\n    if (options) {\n      const { fieldsProps, idFields } = options;\n      if (fieldsProps) {\n        this.fieldsProps = fieldsProps;\n        this.fieldsPropsMap = new Map(Object.entries(fieldsProps));\n      }\n      if (idFields) {\n        // Converting each field into string because could be a RegExp item.\n        // this.idFieldsSet = new Set(idFields.map((field) => field.toString()));\n        this.idFields = idFields;\n      }\n    }\n  }\n\n  static async createConnection(args: {\n    host: string;\n    port?: string;\n    database: string;\n    username?: string;\n    password?: string;\n  }): Promise<Db> {\n    const { host, port = 27017, database, username, password } = args;\n    const authString = this.authString(username, password);\n    const uri = `mongodb://${authString}${host}:${port}/`;\n    const client = new MongoClient(uri);\n    try {\n      const connection = await client.connect();\n      await connection.db(database).command({ ping: 1 });\n      return connection.db(database);\n    } catch (err) {\n      console.error(err);\n      throw new Error(`Failed to connect to MongoDB to database: ${database}`);\n    }\n  }\n\n  private static authString(username?: string, password?: string): string {\n    return username != null && password != null\n      ? `${username}:${password}@`\n      : '';\n  }\n\n  static async createConnection_DEPRECATED(uri: string, database: string) {\n    // Create a new MongoClient\n    const client = new MongoClient(uri);\n\n    try {\n      // Connect the client to the server (optional starting in v4.7)\n      await client.connect();\n\n      // Establish connection\n      const connection = client.db(database);\n\n      // Verify connection\n      await connection.command({ ping: 1 });\n\n      console.log(logPrefix, 'Connected to databse:', database);\n\n      return connection;\n    } catch {\n      // Ensures that the client will close when you finish/error\n      await client.close();\n\n      console.log(logPrefix, 'Error connecting to database:', database);\n    }\n  }\n\n  async count(filter: Filter<T>): Promise<number> {\n    return this.collection.countDocuments(this.toDocument(filter));\n  }\n\n  async delete(filter: Filter<T>): Promise<number> {\n    return (await this.collection.deleteMany(this.toDocument(filter)))\n      .deletedCount;\n  }\n\n  async drop(sure: boolean): Promise<boolean> {\n    if (sure) {\n      const filter = { name: this.collectionName };\n      const collections = await this.connection\n        .listCollections(filter)\n        .toArray();\n\n      if (collections.length > 1) {\n        throw new Error(\n          `More than 1 collection found with name: ${this.collectionName}`\n        );\n      }\n\n      if (collections.length === 1) {\n        await this.collection.drop();\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  async insert(data: Suggested<T>): Promise<string> {\n    const document = await this.collection.insertOne(this.toDocument(data));\n    return `${document.insertedId}`;\n  }\n\n  private toDocument(data: Document): Document {\n    if (data === null) return {};\n    const document: Document = Object.assign({}, this.parseStringsIDs(data));\n    for (const [field, prop] of this.fieldsPropsMap.entries()) {\n      if (Object.prototype.hasOwnProperty.call(document, prop)) {\n        const value = document[prop];\n        document[field] = value;\n        delete document[prop];\n      }\n    }\n    const { _id } = document;\n    if (_id == null) {\n      delete document['_id'];\n    }\n\n    return document;\n  }\n\n  private toData(document: Document): Document {\n    const documentObject: Document = Object.assign({}, document);\n    const data: Document = {};\n    for (const fieldName in documentObject) {\n      if (Object.prototype.hasOwnProperty.call(documentObject, fieldName)) {\n        const value = documentObject[fieldName];\n        const prop = this.fieldsPropsMap.get(fieldName) ?? fieldName;\n        data[prop] = value;\n      }\n    }\n    return this.parseStringsIDs(data);\n  }\n\n  private parseStringsIDs(document: Document): Document {\n    const parseValue = (value: ObjectId | string): ObjectId | string => {\n      if (value instanceof ObjectId) {\n        return value.toString();\n      } else {\n        return new ObjectId(value);\n      }\n    };\n\n    for (const key in document) {\n      if (Object.prototype.hasOwnProperty.call(document, key)) {\n        const value = document[key];\n        for (const field of this.idFields) {\n          const isRegex = field instanceof RegExp;\n          const matches = isRegex ? key.match(field) : false;\n          if (matches || key === field) {\n            if (value instanceof Array) {\n              document[key] = value.map((item) => parseValue(item));\n            } else {\n              document[key] = parseValue(value);\n            }\n          }\n        }\n      }\n    }\n    return document;\n  }\n\n  async select<R = T>(filter?: Filter<T>, options?: FindOptions): Promise<R[]> {\n    const queryFilter = this.toDocument(filter);\n    return (await this.collection\n      .find<R>(queryFilter, options)\n      .map((doc) => this.toData(doc))\n      .toArray()) as R[];\n  }\n\n  async selectOne<R = T>(\n    filter?: Filter<T> | { _id: string },\n    options?: FindOptions\n  ): Promise<R | null> {\n    const parsedFilter = this.toDocument(filter);\n    const document = await this.collection.findOne<R>(parsedFilter, options);\n    if (document == null) return null;\n    return this.toData(document) as R;\n  }\n\n  async update(filter: Filter<T>, values: Suggested<T>): Promise<number> {\n    return (await this.collection.updateMany(this.toDocument(filter), values))\n      .modifiedCount;\n  }\n}\n","export * from './lib/mongoose/entry.mongoose-data-model';\nexport * from './lib/mongoose/notebook.mongoose-data-model';\nexport * from './lib/mongoose/user.mongoose-data-model';\n","import { Schema } from 'mongoose';\n\nexport const entryMongooseDataModel = {\n  name: 'Entry',\n  schema: new Schema(\n    {\n      userID: Schema.Types.ObjectId,\n      notebookID: Schema.Types.ObjectId,\n      text: Schema.Types.String,\n      start: {\n        type: Schema.Types.Date,\n        default: null,\n      },\n      startFixed: {\n        type: Schema.Types.String,\n        default: null,\n      },\n      end: Schema.Types.Date,\n      endFixed: Schema.Types.String,\n      includesTime: Schema.Types.Boolean,\n    },\n    { collection: 'entries' }\n  ),\n};\n","import { Schema } from 'mongoose';\n\nexport const notebookMongooseDataModel = {\n  name: 'Notebook',\n  schema: new Schema(\n    {\n      userID: Schema.Types.ObjectId,\n      name: Schema.Types.String,\n    },\n    { collection: 'notebooks' }\n  ),\n};\n","import { Schema } from 'mongoose';\n\nexport const userMongooseDataModel = {\n  name: 'User',\n  schema: new Schema(\n    {\n      name: Schema.Types.String,\n      surname: Schema.Types.String,\n      email: Schema.Types.String,\n    },\n    { collection: 'users' }\n  ),\n};\n","export const appEnv = {\n  httpPort: process.env.http_port ?? 7504,\n  jwtSecret: process.env.jwt_key ?? 'thisisasecret',\n  databases: {\n    users: process.env.database_users ?? 'mongodb://localhost/duxco_users',\n    journal:\n      process.env.database_journal ?? 'mongodb://localhost/duxco_journal',\n  },\n};\n","import { Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { listEntryProcess } from '../process/list-entry.process';\nimport { EntryDataAccess } from '../services/entry-data-access.class';\nimport { journalDBConnection } from '../../../db-connections/journal-db-connection';\nimport { SessionRequest } from '../../../components/session-request.type';\n\ntype Params = unknown;\ntype Query = {\n  notebookID: string;\n  offset: string;\n};\ntype Body = unknown;\n\nexport async function listEntryController(\n  req: SessionRequest<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await listEntryProcess(\n      {\n        userID: req.session.userID,\n        notebookID: req.query.notebookID,\n        offset: +req.query.offset,\n      },\n      {\n        entryDataAccess: new EntryDataAccess(journalDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError_DEPRECATE_2(httpStatus, rest);\n  }\n}\n","import { Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { saveEntryProcess } from '../process/save-entry.process';\nimport { EntryDataAccess } from '../services/entry-data-access.class';\nimport { SessionRequest } from '../../../components/session-request.type';\nimport { journalDBConnection } from '../../../db-connections/journal-db-connection';\n\ntype Params = unknown;\ntype Query = unknown;\ntype Body = {\n  notebookID: string;\n  text: string;\n  endFixed: string;\n  includesTime: boolean;\n};\n\nexport async function saveEntryController(\n  req: SessionRequest<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await saveEntryProcess(\n      {\n        userID: req.session.userID,\n        notebookID: req.body.notebookID,\n        text: req.body.text,\n        endFixed: req.body.endFixed,\n        includesTime: req.body.includesTime,\n      },\n      {\n        entryDataAccess: new EntryDataAccess(journalDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError(rest, httpStatus);\n  }\n}\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { updateEntryProcess } from '../process/update-entry.process';\nimport { EntryDataAccess } from '../services/entry-data-access.class';\nimport { journalDBConnection } from '../../../db-connections/journal-db-connection';\n\ntype Params = { id: string };\ntype Query = unknown;\ntype Body = {\n  text: string;\n  date: string;\n  start?: string;\n  end: string;\n};\n\nexport async function updateEntryController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await updateEntryProcess(\n      {\n        id: req.params.id,\n        text: req.body.text,\n        date: req.body.date,\n        start: req.body.start,\n        end: req.body.end,\n      },\n      {\n        entryDataAccess: new EntryDataAccess(journalDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError_DEPRECATE_2(httpStatus, rest);\n  }\n}\n","import { NextFunction, Response } from 'express';\nimport { ResponseHanlder } from '@components/express';\nimport { ErrorHandler, ErrorIssueType } from '@components/error-handler';\nimport { SessionRequest } from '../components/session-request.type';\nimport { appEnv } from '../app-env';\nimport { Session } from '../components/session.class';\n\nexport function verifyRequestSession(\n  req: SessionRequest,\n  res: Response,\n  next: NextFunction\n) {\n  const responseHanlder = new ResponseHanlder(res);\n  const errorHandler = new ErrorHandler('verifyRequestSession');\n  try {\n    const token = req.headers['authorization'];\n    errorHandler.attr('authorization_header').string(token).notEmpty();\n    errorHandler.throw(401);\n    const session = new Session(appEnv.jwtSecret).verifySession(token);\n    if (session == null) {\n      errorHandler.attr('token').add(ErrorIssueType.Validity).throw(401);\n    }\n    req.session = session;\n    next();\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    responseHanlder.sendError(rest, httpStatus);\n  }\n}\n","import { JwtPayload, sign, verify } from 'jsonwebtoken';\n\nexport interface ISession {\n  userID: string;\n}\n\nexport class Session {\n  constructor(private secret: string) {}\n\n  createToken(payload: ISession): string {\n    const date = new Date();\n    const hours = date.getHours();\n    date.setHours(hours + 24);\n    const time = date.getTime();\n    return sign({ payload }, this.secret, { expiresIn: time });\n  }\n\n  verifySession(token: string): ISession | null {\n    try {\n      const decoded = verify(token, this.secret) as JwtPayload;\n      return decoded.payload as ISession;\n    } catch (error) {\n      return null;\n    }\n  }\n}\n","module.exports = require(\"jsonwebtoken\");","export * from './process/delete-notebook.process';\nexport * from './process/get-notebook-by-id.process';\nexport * from './process/list-notebook.process';\nexport * from './process/save-notebook.process';\nexport * from './process/update-notebook.process';\nexport * from './services/notebook-data-access.class';\nexport * from './services/notebook-data-access.interface';\nexport * from './notebook.router';\n","import { ErrorHandler } from '@components/error-handler';\nimport { INotebook } from '@journal/entites';\n\nimport { INotebookDataAccess } from '../services/notebook-data-access.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  notebookDataAccess: INotebookDataAccess;\n};\n\ntype Output = INotebook | null;\n\nexport async function deleteNotebookProcess(\n  { id }: Input,\n  { notebookDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('delete_notebook');\n  errorHandler.attr('id').string(id).notEmpty();\n  errorHandler.throw();\n\n  await notebookDataAccess.delete(id);\n\n  return;\n}\n","import { ErrorHandler } from '@components/error-handler';\nimport { INotebook } from '@journal/entites';\n\nimport { INotebookDataAccess } from '../services/notebook-data-access.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  notebookDataAccess: INotebookDataAccess;\n};\n\ntype Output = INotebook | null;\n\nexport async function getNotebookByIDProcess(\n  { id }: Input,\n  { notebookDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('get_notebook_by_id');\n  errorHandler.attr('id').string(id).notEmpty();\n  errorHandler.throw();\n\n  return await notebookDataAccess.getByID(id);\n}\n","import { ErrorHandler } from '@components/error-handler';\nimport { INotebook } from '@journal/entites';\n\nimport { INotebookDataAccess } from '../services/notebook-data-access.interface';\n\ntype Input = {\n  userID: string;\n};\n\ntype Deps = {\n  notebookDataAccess: INotebookDataAccess;\n};\n\ntype Output = INotebook[];\n\nexport async function listNotebookProcess(\n  { userID }: Input,\n  { notebookDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('list_notebook');\n  errorHandler.throw();\n\n  return await notebookDataAccess.list({ userID });\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { INotebookDataAccess } from '../services/notebook-data-access.interface';\n\ntype Input = {\n  userID: string;\n  name: string;\n};\n\ntype Deps = {\n  notebookDataAccess: INotebookDataAccess;\n};\n\ntype Output = { id: string };\n\nexport async function saveNotebookProcess(\n  { userID, name }: Input,\n  { notebookDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('save_notebook');\n  errorHandler.attr('name').string(name).length(1, 50);\n  errorHandler.throw();\n\n  const id = await notebookDataAccess.save({ userID, name });\n\n  return { id };\n}\n","import { ErrorHandler, ErrorIssueType } from '@components/error-handler';\n\nimport { INotebookDataAccess } from '../services/notebook-data-access.interface';\nimport { Notebook } from '@journal/entites';\n\ntype Input = {\n  id: string;\n  userID: string;\n  name: string;\n};\n\ntype Deps = {\n  notebookDataAccess: INotebookDataAccess;\n};\n\ntype Output = void;\n\nexport async function updateNotebookProcess(\n  { id, userID, name }: Input,\n  { notebookDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('update_notebook');\n  const notebookValues = await notebookDataAccess.getByID(id);\n  const notebook = new Notebook(notebookValues);\n  if (notebookValues.userID !== userID) {\n    errorHandler.attr('userID').add(ErrorIssueType.Access).throw();\n  }\n  notebook.name = name;\n  notebook.validateName(errorHandler.attr('name'));\n  errorHandler.throw();\n\n  await notebookDataAccess.update(id, { name });\n}\n","import { Connection } from 'mongoose';\n\nimport { MongooseDataAccess } from '@node-components';\nimport { INotebook } from '@journal/entites';\n\nimport {\n  INotebookDataAccess,\n  ListFilter,\n} from './notebook-data-access.interface';\n\nexport class NotebookDataAccess implements INotebookDataAccess {\n  private dataAccess: MongooseDataAccess<INotebook>;\n\n  constructor(dbConnection: Connection) {\n    this.dataAccess = new MongooseDataAccess(dbConnection, 'Notebook', {\n      _id: 'id',\n    });\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.dataAccess.model.deleteOne(this.dataAccess.toDocument({ id }));\n  }\n\n  async getByID(id: string): Promise<INotebook | null> {\n    return await this.dataAccess.model\n      .findOne(this.dataAccess.toDocument({ id }))\n      .then((value) => this.dataAccess.toData(value));\n  }\n\n  async list({ userID }: ListFilter): Promise<INotebook[]> {\n    return await this.dataAccess.model\n      .find({ userID })\n      .then((value) => this.dataAccess.toDataArray(value));\n  }\n\n  async save(values: INotebook): Promise<string> {\n    return await this.dataAccess.insert(values);\n  }\n\n  async update(id: string, values: INotebook): Promise<void> {\n    await this.dataAccess.model.updateOne(\n      this.dataAccess.toDocument({ id }),\n      this.dataAccess.toDocument(values)\n    );\n  }\n}\n","import { INotebook } from '@journal/entites';\n\nexport type ListFilter = {\n  userID: string;\n};\n\nexport interface INotebookDataAccess {\n  delete(id: string): Promise<void>;\n  getByID(id: string): Promise<INotebook | null>;\n  list(filter: ListFilter): Promise<INotebook[]>;\n  save(values: INotebook): Promise<string>;\n  update(id: string, values: INotebook | unknown): Promise<void>;\n}\n","import { Router } from 'express';\nimport { deleteNotebookController } from './controllers/delete-notebook.controller';\nimport { getNotebookByIDController } from './controllers/get-notebook-by-id.controller';\nimport { listNotebookController } from './controllers/list-notebook.controller';\nimport { saveNotebookController } from './controllers/save-notebook.controller';\nimport { updateNotebookController } from './controllers/update-notebook.controller';\nimport { verifyRequestSession } from '../../middlewares/verify-session.middle';\n\nexport const notebookRouter = Router();\n\nnotebookRouter\n  .route('/')\n  .get(verifyRequestSession, listNotebookController)\n  .post(verifyRequestSession, saveNotebookController);\n\nnotebookRouter\n  .route('/:id')\n  .get(getNotebookByIDController)\n  .patch(updateNotebookController)\n  .delete(deleteNotebookController);\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { deleteNotebookProcess } from '../process/delete-notebook.process';\nimport { NotebookDataAccess } from '../services/notebook-data-access.class';\n\ntype Params = { id: string };\ntype Query = unknown;\ntype Body = unknown;\n\nexport async function deleteNotebookController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await deleteNotebookProcess(\n      { id: req.params.id },\n      {\n        notebookDataAccess: new NotebookDataAccess(undefined),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError_DEPRECATE_2(httpStatus, rest);\n  }\n}\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { getNotebookByIDProcess } from '../process/get-notebook-by-id.process';\nimport { NotebookDataAccess } from '../services/notebook-data-access.class';\nimport { journalDBConnection } from '../../../db-connections/journal-db-connection';\n\ntype Params = { id: string };\ntype Query = unknown;\ntype Body = unknown;\n\nexport async function getNotebookByIDController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await getNotebookByIDProcess(\n      { id: req.params.id },\n      {\n        notebookDataAccess: new NotebookDataAccess(journalDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError(rest, httpStatus);\n  }\n}\n","import { Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { listNotebookProcess } from '../process/list-notebook.process';\nimport { NotebookDataAccess } from '../services/notebook-data-access.class';\nimport { journalDBConnection } from '../../../db-connections/journal-db-connection';\nimport { SessionRequest } from '../../../components/session-request.type';\n\ntype Params = unknown;\ntype Query = unknown;\ntype Body = unknown;\n\nexport async function listNotebookController(\n  req: SessionRequest<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await listNotebookProcess(\n      { userID: req.session.userID },\n      {\n        notebookDataAccess: new NotebookDataAccess(journalDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError_DEPRECATE_2(httpStatus, rest);\n  }\n}\n","import { Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { saveNotebookProcess } from '../process/save-notebook.process';\nimport { NotebookDataAccess } from '../services/notebook-data-access.class';\nimport { SessionRequest } from '../../../components/session-request.type';\nimport { journalDBConnection } from '../../../db-connections/journal-db-connection';\n\ntype Params = unknown;\ntype Query = unknown;\ntype Body = {\n  name: string;\n};\n\nexport async function saveNotebookController(\n  req: SessionRequest<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await saveNotebookProcess(\n      {\n        userID: req.session.userID,\n        name: req.body.name,\n      },\n      {\n        notebookDataAccess: new NotebookDataAccess(journalDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError_DEPRECATE_2(httpStatus, rest);\n  }\n}\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { updateNotebookProcess } from '../process/update-notebook.process';\nimport { NotebookDataAccess } from '../services/notebook-data-access.class';\nimport { SessionRequest } from '../../../components/session-request.type';\n\ntype Params = { id: string };\ntype Query = unknown;\ntype Body = {\n  name: string;\n};\n\nexport async function updateNotebookController(\n  req: SessionRequest<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await updateNotebookProcess(\n      { id: req.params.id, userID: req.session.userID, name: req.body.name },\n      {\n        notebookDataAccess: new NotebookDataAccess(undefined),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError_DEPRECATE_2(httpStatus, rest);\n  }\n}\n","export * from './process/delete-user.process';\nexport * from './process/get-user-by-id.process';\nexport * from './process/list-user.process';\nexport * from './process/save-user.process';\nexport * from './process/update-user.process';\nexport * from './services/user-data-access.class';\nexport * from './services/user-data-access.interface';\nexport * from './user.router';\n","import { ErrorHandler } from '@components/error-handler';\nimport { IUser } from '@journal/entites';\n\nimport { IUserDataAccess } from '../services/user-data-access.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  userDataAccess: IUserDataAccess;\n};\n\ntype Output = IUser | null;\n\nexport async function deleteUserProcess(\n  { id }: Input,\n  { userDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('delete_user');\n  errorHandler.attr('id').string(id).notEmpty();\n  errorHandler.throw();\n\n  await userDataAccess.delete(id);\n\n  return;\n}\n","import { ErrorHandler } from '@components/error-handler';\nimport { IUser } from '@journal/entites';\n\nimport { IUserDataAccess } from '../services/user-data-access.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  userDataAccess: IUserDataAccess;\n};\n\ntype Output = IUser | null;\n\nexport async function getUserByIDProcess(\n  { id }: Input,\n  { userDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('get_user_by_id');\n  errorHandler.attr('id').string(id).notEmpty();\n  errorHandler.throw();\n\n  return await userDataAccess.getByID(id);\n}\n","import { ErrorHandler } from '@components/error-handler';\nimport { IUser } from '@journal/entites';\n\nimport { IUserDataAccess } from '../services/user-data-access.interface';\n\ntype Input = undefined;\n\ntype Deps = {\n  userDataAccess: IUserDataAccess;\n};\n\ntype Output = IUser[];\n\nexport async function listUserProcess(\n  _: Input,\n  { userDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('list_user');\n  errorHandler.throw();\n\n  return await userDataAccess.list();\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IUserDataAccess } from '../services/user-data-access.interface';\n\ntype Input = {\n  firstName: string;\n  lastName: string;\n  email: string;\n};\n\ntype Deps = {\n  userDataAccess: IUserDataAccess;\n};\n\ntype Output = { id: string };\n\nexport async function saveUserProcess(\n  { firstName, lastName, email }: Input,\n  { userDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('save_user');\n  errorHandler.throw();\n\n  const id = await userDataAccess.save({\n    name: firstName,\n    surname: lastName,\n    email,\n  });\n\n  return { id };\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IUserDataAccess } from '../services/user-data-access.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  userDataAccess: IUserDataAccess;\n};\n\ntype Output = void;\n\nexport async function updateUserProcess(\n  { id }: Input,\n  { userDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('update_user');\n  errorHandler.throw();\n\n  // DO NOT PASS INPUT DIRECTLY\n  await userDataAccess.update(id, undefined);\n}\n","import { Connection } from 'mongoose';\n\nimport { MongooseDataAccess } from '@node-components';\nimport { IUser } from '@journal/entites';\n\nimport { IUserDataAccess } from './user-data-access.interface';\n\nexport class UserDataAccess implements IUserDataAccess {\n  private dataAccess: MongooseDataAccess<IUser>;\n\n  constructor(dbConnection: Connection) {\n    this.dataAccess = new MongooseDataAccess(dbConnection, 'User', {\n      _id: 'id',\n    });\n  }\n\n  async delete(id: string): Promise<void> {\n    await this.dataAccess.model.deleteOne(this.dataAccess.toDocument({ id }));\n  }\n\n  async getByEmail(email: string): Promise<IUser | null> {\n    const document = await this.dataAccess.model.findOne(\n      this.dataAccess.toDocument({ email })\n    );\n    const some = this.dataAccess.toData(document);\n    return some;\n  }\n\n  async getByID(id: string): Promise<IUser | null> {\n    return await this.dataAccess.model\n      .findOne(this.dataAccess.toDocument({ id }))\n      .then((value) => this.dataAccess.toData(value));\n  }\n\n  async list(): Promise<IUser[]> {\n    return await this.dataAccess.model\n      .find()\n      .then((data) => this.dataAccess.toDataArray(data));\n  }\n\n  async save(values: IUser): Promise<string> {\n    return await this.dataAccess.insert(values);\n  }\n\n  async update(id: string, values: IUser): Promise<void> {\n    await this.dataAccess.model.updateOne(\n      this.dataAccess.toDocument({ id }),\n      this.dataAccess.toDocument(values)\n    );\n  }\n}\n","import { IUser } from '@journal/entites';\n\nexport interface IUserDataAccess {\n  delete(id: string): Promise<void>;\n  getByID(id: string): Promise<IUser | null>;\n  getByEmail(email: string): Promise<IUser | null>;\n  list(): Promise<IUser[]>;\n  save(values: IUser): Promise<string>;\n  update(id: string, values: IUser | unknown): Promise<void>;\n}\n","import { Router } from 'express';\n// import { deleteUserController } from './controllers/delete-user.controller';\n// import { getUserByIDController } from './controllers/get-user-by-id.controller';\nimport { listUserController } from './controllers/list-user.controller';\nimport { saveUserController } from './controllers/save-user.controller';\n// import { updateUserController } from './controllers/update-user.controller';\n\nexport const userRouter = Router();\n\nuserRouter.route('/').get(listUserController).post(saveUserController);\n\n// userRouter\n//   .route('/:id')\n//   .get(getUserByIDController)\n//   .patch(updateUserController)\n//   .delete(deleteUserController);\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { listUserProcess } from '../process/list-user.process';\nimport { UserDataAccess } from '../services/user-data-access.class';\nimport { duxcoUsersDBConnection } from '../../../db-connections/user-db-connection';\n\ntype Params = unknown;\ntype Query = unknown;\ntype Body = unknown;\n\nexport async function listUserController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await listUserProcess(null, {\n      userDataAccess: new UserDataAccess(duxcoUsersDBConnection),\n    });\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError(rest, httpStatus);\n  }\n}\n","import { MongooseDataAccess } from '@components/data-access';\nimport { Connection } from 'mongoose';\nimport { userMongooseDataModel as userDataModel } from '@journal/data-models';\nimport { appEnv } from '../app-env';\n\nexport const duxcoUsersDBConnection: Connection =\n  MongooseDataAccess.createConnection(appEnv.databases.users);\nduxcoUsersDBConnection.model(userDataModel.name, userDataModel.schema);\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { saveUserProcess } from '../process/save-user.process';\nimport { UserDataAccess } from '../services/user-data-access.class';\nimport { duxcoUsersDBConnection } from '../../../db-connections/user-db-connection';\n\ntype Params = unknown;\ntype Query = unknown;\ntype Body = {\n  firstName: string;\n  lastName: string;\n  email: string;\n};\n\nexport async function saveUserController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await saveUserProcess(\n      {\n        firstName: req.body.firstName,\n        lastName: req.body.lastName,\n        email: req.body.email,\n      },\n      {\n        userDataAccess: new UserDataAccess(duxcoUsersDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError(rest, httpStatus);\n  }\n}\n","module.exports = require(\"cors\");","export * from './process/delete-auth.process';\nexport * from './process/get-auth-by-id.process';\nexport * from './process/list-auth.process';\nexport * from './process/sign-in.process';\nexport * from './process/update-auth.process';\nexport * from './services/auth-serivce.class';\nexport * from './services/auth-service.interface';\nexport * from './auth.router';\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IAuthSerivce } from '../services/auth-service.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  authDataAccess: IAuthSerivce;\n};\n\ntype Output = unknown | null;\n\nexport async function deleteAuthProcess(\n  { id }: Input,\n  { authDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('delete_auth');\n  errorHandler.attr('id').string(id).notEmpty();\n  errorHandler.throw();\n\n  return;\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IAuthSerivce } from '../services/auth-service.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  authDataAccess: IAuthSerivce;\n};\n\ntype Output = unknown | null;\n\nexport async function getAuthByIDProcess(\n  { id }: Input,\n  { authDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('get_auth_by_id');\n  errorHandler.attr('id').string(id).notEmpty();\n  errorHandler.throw();\n\n  return null;\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IAuthSerivce } from '../services/auth-service.interface';\n\ntype Input = undefined;\n\ntype Deps = {\n  authDataAccess: IAuthSerivce;\n};\n\ntype Output = unknown[];\n\nexport async function listAuthProcess(\n  _input: Input,\n  { authDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('list_auth');\n  errorHandler.throw();\n\n  return [];\n}\n","import { ErrorHandler } from '@components/error-handler';\nimport { AuthService } from '../services/auth-serivce.class';\n\ntype Input = {\n  userID: string;\n};\n\ntype Deps = {\n  authService: AuthService;\n};\n\ntype Output = { token: string };\n\nexport async function signInProcess(\n  { userID }: Input,\n  { authService }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('save_auth');\n  errorHandler.throw();\n\n  const token = authService.sign({ userID });\n\n  return { token };\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IAuthSerivce } from '../services/auth-service.interface';\n\ntype Input = {\n  id: string;\n};\n\ntype Deps = {\n  authDataAccess: IAuthSerivce;\n};\n\ntype Output = void;\n\nexport async function updateAuthProcess(\n  { id }: Input,\n  { authDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('update_auth');\n  errorHandler.throw();\n\n  return;\n}\n","import { IAuthSerivce } from './auth-service.interface';\n\nimport {\n  google, // The top level object used to access services\n  Auth, // Namespace for auth related types\n} from 'googleapis';\nimport { Session } from '../../../components/session.class';\n\nexport class AuthService implements IAuthSerivce {\n  constructor(private secretKey: string) {}\n\n  async googleAuth(accessToken: string): Promise<{\n    email: string;\n    name: string;\n    surname: string;\n  }> {\n    const oauth2Client = new Auth.OAuth2Client();\n    oauth2Client.setCredentials({\n      access_token: accessToken,\n    });\n    const oauth2 = google.oauth2({\n      auth: oauth2Client,\n      version: 'v2',\n    });\n    const userInfoGetResponse = await oauth2.userinfo.get();\n    const userInfo = userInfoGetResponse.data;\n    return {\n      email: userInfo.email,\n      name: userInfo.given_name,\n      surname: userInfo.family_name,\n    };\n  }\n\n  sign(payload: { userID: string }): string {\n    return new Session(this.secretKey).createToken(payload);\n  }\n}\n","module.exports = require(\"googleapis\");","export interface IAuthSerivce {\n  sign(payload: { userID: string }): string;\n  googleAuth(\n    token: string\n  ): Promise<{ email: string; name: string; surname: string }>;\n}\n","import { Router } from 'express';\nimport { signInController } from './controllers/sign-in.controller';\nimport { googleAuthController } from './controllers/google-auth.controller';\nimport { verifyRequestSession } from '../../middlewares/verify-session.middle';\nimport { getSession } from './controllers/get-session.controller';\n\nexport const authRouter = Router();\n\nauthRouter\n  .route('/')\n  .get(verifyRequestSession, getSession)\n  .post(signInController);\nauthRouter.route('/google').post(googleAuthController);\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { signInProcess } from '../process/sign-in.process';\nimport { AuthService } from '../services/auth-serivce.class';\nimport { appEnv } from '../../../app-env';\n\ntype Params = unknown;\ntype Query = unknown;\ntype Body = {\n  userID: string;\n};\n\nexport async function signInController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await signInProcess(\n      { userID: req.body.userID },\n      { authService: new AuthService(appEnv.jwtSecret) }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError(rest, httpStatus);\n  }\n}\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\nimport { AuthService } from '../services/auth-serivce.class';\nimport { googleAuthProcess } from '../process/google-auth.process';\nimport { UserDataAccess } from '../../user';\nimport { duxcoUsersDBConnection } from '../../../db-connections/user-db-connection';\nimport { appEnv } from '../../../app-env';\n\ntype Params = unknown;\ntype Query = unknown;\ntype Body = {\n  accessToken: string;\n};\n\nexport async function googleAuthController(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    const result = await googleAuthProcess(\n      { accessToken: req.body.accessToken },\n      {\n        authService: new AuthService(appEnv.jwtSecret),\n        userDataAccess: new UserDataAccess(duxcoUsersDBConnection),\n      }\n    );\n    response.sendData(result);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError(rest, httpStatus);\n  }\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IAuthSerivce } from '../services/auth-service.interface';\nimport { registerUserProcess } from '../../user/process/register-user.process';\nimport { IUserDataAccess } from '../../user';\n\ntype Input = {\n  accessToken: string;\n};\n\ntype Deps = {\n  authService: IAuthSerivce;\n  userDataAccess: IUserDataAccess;\n};\n\ntype Output = { token: string };\n\nexport async function googleAuthProcess(\n  { accessToken }: Input,\n  { authService, userDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('delete_auth');\n  errorHandler.attr('id').string(accessToken).notEmpty();\n  errorHandler.throw();\n  const { email, name, surname } = await authService.googleAuth(accessToken);\n  const { id: userID } = await registerUserProcess(\n    { email, name, surname },\n    { userDataAccess }\n  );\n  const token = authService.sign({ userID });\n  return { token };\n}\n","import { ErrorHandler } from '@components/error-handler';\n\nimport { IUserDataAccess } from '../services/user-data-access.interface';\n\ntype Input = {\n  email: string;\n  name: string;\n  surname: string;\n};\n\ntype Deps = {\n  userDataAccess: IUserDataAccess;\n};\n\ntype Output = { id: string };\n\nexport async function registerUserProcess(\n  { email, name, surname }: Input,\n  { userDataAccess }: Deps\n): Promise<Output> {\n  const errorHandler = new ErrorHandler('register_user');\n  errorHandler.throw();\n\n  const user = await userDataAccess.getByEmail(email);\n  let id: string | null = null;\n  if (user == null) {\n    id = await userDataAccess.save({ email, name, surname });\n  } else {\n    id = user.id;\n  }\n\n  return { id };\n}\n","import { Request, Response } from 'express';\n\nimport { ErrorHandler } from '@components/error-handler';\nimport { ResponseHanlder } from '@components/express';\n\ntype Params = unknown;\ntype Query = unknown;\ntype Body = unknown;\n\nexport async function getSession(\n  req: Request<Params, unknown, Body, Query>,\n  res: Response\n): Promise<void> {\n  const response = new ResponseHanlder(res);\n  try {\n    response.sendData(undefined);\n  } catch (error) {\n    const { httpStatus, ...rest } = ErrorHandler.catch(error);\n    response.sendError(rest, httpStatus);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport express from 'express';\nimport { appRouter } from './app/app-router';\nimport { appEnv } from './app/app-env';\n\nconst app = express();\napp.use(appRouter);\n\nconst port = appEnv.httpPort;\nconst server = app.listen(port, () => {\n  console.log(`Listening at port: ${port}`);\n});\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}